cpp: |
  bool allAbove(const vector<double>& numbers, double threshold) {
      return ranges::all_of(numbers, [=](double n) { return n > threshold; });
  }
csharp: |
  static bool AllAbove(List<double> numbers, double threshold) {
      return numbers.All(n => n > threshold);
  }
go: |
  func allAbove(numbers []float64, threshold float64) bool {
      for _, n := range numbers {
          if n <= threshold {
              return false
          }
      }
      return true
  }
java: |
  static boolean allAbove(List<Double> numbers, double threshold) {
      return numbers.stream().allMatch(n -> n > threshold);
  }
javascript: |
  function allAbove(numbers, threshold) {
      return numbers.every(n => n > threshold);
  }
php: |
  function all_above($numbers, $threshold) {
      return array_reduce($numbers, function($carry, $n) use ($threshold) {
          return $carry && $n > $threshold;
      }, true);
  }
python: |
  def all_above(numbers, threshold):
      return all(n > threshold for n in numbers)
ruby: |
  def all_above(numbers, threshold)
      numbers.all? { |n| n > threshold }
  end